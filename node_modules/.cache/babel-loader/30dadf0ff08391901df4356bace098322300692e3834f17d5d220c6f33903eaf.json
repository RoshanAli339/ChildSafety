{"ast":null,"code":"var _jsxFileName = \"/home/cyberknight/ChildSafety/child-safety/src/components/History.js\";\nimport NavBar from \"./NavBar\";\nimport { pin } from \"../data/location\";\nimport './History.css';\n\n// function to calculate the distance between two points given latitude and longitude\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction calculateProximity(location) {\n  const center = {\n    latitude: 16.255168643233784,\n    longitude: 80.32518364053286\n  };\n  const r = 6371; // radius of earth in KM\n  const p = Math.PI / 180;\n  const lat1 = center.latitude * p;\n  const long1 = center.longitude * p;\n  const lat2 = location.latitude * p;\n  const long2 = location.longitude * p;\n  const dlat = lat2 - lat1;\n  const dlong = long2 - long1;\n  const a = Math.sin(dlat / 2) ** 2 + Math.cos(lat1) * Math.cos(lat2) * Math.sin(dlong / 2) ** 2;\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return Math.round(r * c * 1000);\n}\nexport default function History() {\n  pin.reverse();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"theader\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"S.No.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date & Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Latitude\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Longitude\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Maps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"In Proximity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: pin.map((day, index) => {\n            let inProximity = calculateProximity(day) < 5000;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: inProximity && \"outProximity\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: day.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: day.latitude\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: day.longitude\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"https://www.google.com/maps/@\" + day.latitude + \",\" + day.longitude + \",18z?entry=ttu\",\n                  children: \"Google Maps\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"yes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = History;\nvar _c;\n$RefreshReg$(_c, \"History\");","map":{"version":3,"names":["NavBar","pin","jsxDEV","_jsxDEV","Fragment","_Fragment","calculateProximity","location","center","latitude","longitude","r","p","Math","PI","lat1","long1","lat2","long2","dlat","dlong","a","sin","cos","c","atan2","sqrt","round","History","reverse","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","day","index","inProximity","date","href","_c","$RefreshReg$"],"sources":["/home/cyberknight/ChildSafety/child-safety/src/components/History.js"],"sourcesContent":["import NavBar from \"./NavBar\";\nimport {pin} from \"../data/location\"\nimport './History.css'\n\n// function to calculate the distance between two points given latitude and longitude\nfunction calculateProximity(location){\n    const center = {\n        latitude: 16.255168643233784,\n        longitude: 80.32518364053286\n    }\n    const r = 6371; // radius of earth in KM\n    const p = Math.PI / 180;\n    const lat1 = center.latitude * p;\n    const long1 = center.longitude * p;\n    const lat2 = location.latitude * p;\n    const long2 = location.longitude * p;\n\n    const dlat = lat2 - lat1\n    const dlong = long2 - long1\n\n    const a = Math.sin(dlat/2) ** 2 + Math.cos(lat1) * Math.cos(lat2) *\n                    Math.sin(dlong / 2) ** 2\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a))\n\n    return Math.round((r * c) * 1000);\n}\n\nexport default function History(){\n    pin.reverse()\n\n    return (\n        <>\n            <NavBar/>\n            <div className=\"table-container\">\n                <table>\n                    <thead>\n                        <tr className=\"theader\">\n                            <th>S.No.</th>\n                            <th>Date & Time</th>\n                            <th>Latitude</th>\n                            <th>Longitude</th>\n                            <th>Maps</th>\n                            <th>In Proximity</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {pin.map((day, index) => {\n                            let inProximity = calculateProximity(day) < 5000\n                            return (\n                                <tr key={index} className={inProximity && \"outProximity\"}>\n                                    <td>{index+1}</td>\n                                    <td>{day.date}</td>\n                                    <td>{day.latitude}</td>\n                                    <td>{day.longitude}</td>\n                                    <td><a href={\"https://www.google.com/maps/@\"+day.latitude+\",\"+\n                                        day.longitude+\",18z?entry=ttu\"}>\n                                        Google Maps\n                                        </a>\n                                    </td>\n                                    <td>yes</td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}